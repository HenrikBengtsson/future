on: [push, pull_request]

name: revdepcheck-top

jobs:
  R-CMD-check:
    if: "! contains(github.event.head_commit.message, '[ci skip]')"    

    timeout-minutes: 30
    
    runs-on: ubuntu-20.04

    name: ${{ matrix.config.pkg }} (${{ matrix.config.r }}) ${{ matrix.config.label }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - { r: "release", pkg: "future.batchtools" }
          - { r: "release", pkg: "future.callr"      }
          - { r: "release", pkg: "doFuture"          }
          - { r: "release", pkg: "future.apply"      }
          - { r: "release", pkg: "furrr"             }
          - { r: "release", pkg: "doFuture"          , plan: multisession, label: multisession }
          - { r: "release", pkg: "future.apply"      , plan: multisession, label: multisession }
          - { r: "release", pkg: "furrr"             , plan: multisession, label: multisession }
          - { r: "release", pkg: "future.apply"      , globals_keepWhere: true, label: 'keepWhere' }
          - { r: "release", pkg: "future.apply"      , globals_keepWhere: false, label: '!keepWhere' }

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RSPM: https://packagemanager.rstudio.com/cran/__linux__/focal/latest
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      ## R CMD check
      _R_CHECK_LENGTH_1_CONDITION_: true
      _R_CHECK_LENGTH_1_LOGIC2_: true
      _R_CHECK_MATRIX_DATA_: true
      _R_CHECK_CRAN_INCOMING_: false
      ## Specific to futures
      R_FUTURE_RNG_ONMISUSE: error
      R_FUTURE_PLAN: ${{ matrix.config.plan }}
      R_FUTURE_GLOBALS_KEEPWHERE: ${{ matrix.config.globals_keepWhere }}
      
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@master
        with:
          r-version: ${{ matrix.config.r }}

      - uses: r-lib/actions/setup-pandoc@master

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        if: runner.os != 'Windows'
        uses: actions/cache@v1
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        env:
          RHUB_PLATFORM: linux-x86_64-ubuntu-gcc
        run: |
          Rscript -e "remotes::install_github('r-hub/sysreqs')"
          sysreqs=$(Rscript -e "cat(sysreqs::sysreq_commands('DESCRIPTION'))")
          sudo -s eval "$sysreqs"

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("rcmdcheck")
          install.packages(".", repos=NULL, type="source")  ## needed by parallel workers
          install.packages("${{ matrix.config.pkg }}", dependencies=TRUE)
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check reverse dependency package
        run: |
          url=$(Rscript -e "cat(remotes:::download_version_url('${{ matrix.config.pkg }}', version=NULL, repos='https://cloud.r-project.org', type='source'))")
          wget "$url"
          R CMD check --no-manual --as-cran "$(basename "$url")"

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@master
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-revdep${{ matrix.config.pkg }}-results
          path: ${{ matrix.config.pkg }}.Rcheck
