on: [push, pull_request]

name: revdepcheck-top

jobs:
  R-CMD-check:
    if: "! contains(github.event.head_commit.message, '[ci skip]')"    

    timeout-minutes: 30
    
    runs-on: ubuntu-latest

    name: ${{ matrix.config.pkg }} (${{ matrix.config.r }}) ${{ matrix.config.label }}

    strategy:
      fail-fast: false
      matrix:
        config:
          - { r: "release", pkg: "future.batchtools" }
          - { r: "release", pkg: "future.callr"      }
          - { r: "release", pkg: "doFuture"          }
          - { r: "release", pkg: "future.apply"      }
          - { r: "release", pkg: "furrr"             }
          - { r: "release", pkg: "doFuture"          , plan: multisession, label: multisession }
          - { r: "release", pkg: "future.apply"      , plan: multisession, label: multisession }
          - { r: "release", pkg: "furrr"             , plan: multisession, label: multisession }
          - { r: "release", pkg: "future.apply"      , globals_keepWhere: true, label: 'keepWhere' }
          - { r: "release", pkg: "future.apply"      , globals_keepWhere: false, label: '!keepWhere' }

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      RSPM: https://packagemanager.rstudio.com/cran/__linux__/jammy/latest
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      ## R CMD check
      _R_CHECK_LENGTH_1_CONDITION_: true
      _R_CHECK_LENGTH_1_LOGIC2_: true
      _R_CHECK_MATRIX_DATA_: true
      _R_CHECK_CRAN_INCOMING_: false
      ## Specific to futures
      R_FUTURE_RNG_ONMISUSE: error
      R_FUTURE_PLAN: ${{ matrix.config.plan }}
      R_FUTURE_GLOBALS_KEEPWHERE: ${{ matrix.config.globals_keepWhere }}
      ## Specific to furrr (to disable expect_snapshot() tests)
      NOT_CRAN: false
      
    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::rcmdcheck
            any::remotes
            any::sessioninfo
            any::covr
          needs: check

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          install.packages(".", repos=NULL, type="source")
          install.packages("${{ matrix.config.pkg }}", dependencies=TRUE)
        shell: Rscript {0}

      - name: Session info
        run: |
          options(width = 100)
          pkgs <- installed.packages()[, "Package"]
          sessioninfo::session_info(pkgs, include_base = TRUE)
        shell: Rscript {0}

      - name: Check reverse dependency package
        run: |
          url=$(Rscript -e "cat(remotes:::download_version_url('${{ matrix.config.pkg }}', version=NULL, repos='https://cloud.r-project.org', type='source'))")
          wget "$url"
          R CMD check --no-manual --as-cran "$(basename "$url")"

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-revdep${{ matrix.config.pkg }}-results
          path: ${{ matrix.config.pkg }}.Rcheck
