% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/value.R
\name{value}
\alias{value}
\alias{values}
\alias{value.Future}
\alias{value.list}
\alias{value.listenv}
\alias{value.environment}
\title{The value of a future or the values of all elements in a container}
\usage{
value(...)

\method{value}{Future}(future, stdout = TRUE, signal = TRUE, ...)

\method{value}{list}(x, stdout = TRUE, signal = TRUE, ...)

\method{value}{listenv}(x, stdout = TRUE, signal = TRUE, ...)

\method{value}{environment}(x, stdout = TRUE, signal = TRUE, ...)
}
\arguments{
\item{\dots}{All arguments used by the S3 methods.}

\item{future, x}{A \link{Future}, an environment, a list, or a list environment.}

\item{stdout}{If TRUE, standard output captured while resolving futures
is relayed, otherwise not.}

\item{signal}{If TRUE, \link[base]{conditions} captured while resolving
futures are relayed, otherwise not.}
}
\value{
\code{value()} of a Future object returns the value of the future, which can
be any type of \R object.

\code{value()} of a list, an environment, or a list environment returns an
object with the same number of elements and of the same class.
Names and dimension attributes are preserved, if available.
All future elements are replaced by their corresponding \code{value()} values.
For all other elements, the existing object is kept as-is.

If \code{signal} is TRUE and one of the futures produces an error, then
that error is produced.
}
\description{
Gets the value of a future or the values of all elements (including futures)
in a container such as a list, an environment, or a list environment.
If one or more futures is unresolved, then this function blocks until all
queried futures are resolved.
}
